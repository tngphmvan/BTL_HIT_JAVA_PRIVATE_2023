/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import abstractClass.PigAbstract;
import service.PigService;
import java.awt.Color;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.sql.Date;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Pig;
import service.PigService;

/**
 *
 * @author 84393
 */
public class PigGUI extends javax.swing.JFrame {

    /**
     * Creates new form PigGUI
     */
    List<Pig> list;
    int row;
    DefaultTableModel model;
    PigAbstract pigd = new PigService();
    private Pig pig;

    public PigGUI() {
        initComponents();
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };
        Table.setModel(model);
        model.addColumn("Pig_ID");
        model.addColumn("gender");
        model.addColumn("date_in");
        model.addColumn("date_out");
        model.addColumn("Weigh");
        model.addColumn("Age");
        model.addColumn("Cage_id");

        list = pigd.getPigs();
        try {
            pigd.getConnection().close();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(PigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        for (Pig u : list) {
            model.addRow(new Object[]{u.getPig_id(), u.getGender(), u.getDate_in().toString(), u.getDate_out().toString(), u.getWeigh(), u.getAge(), u.getCage()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        minField = new javax.swing.JTextField();
        maxField = new javax.swing.JTextField();
        filterButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        increaseRadioButton = new javax.swing.JRadioButton();
        exitButton = new javax.swing.JButton();
        changeButton = new javax.swing.JButton();
        valueField = new javax.swing.JTextField();
        refreshButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        filterCombobox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        decreaseRadioButton = new javax.swing.JRadioButton();
        sortButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        filterCombobox1 = new javax.swing.JComboBox<>();
        addButton = new javax.swing.JButton();
        binButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        cageField = new javax.swing.JTextField();
        dateIn = new com.toedter.calendar.JDateChooser();
        dateOut = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        weighSlider = new javax.swing.JSlider();
        ageSlider = new javax.swing.JSlider();
        jLabel13 = new javax.swing.JLabel();
        minDate = new com.toedter.calendar.JDateChooser();
        maxDate = new com.toedter.calendar.JDateChooser();
        ageLabel = new javax.swing.JLabel();
        weighLabel = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        male1RadioButton = new javax.swing.JRadioButton();
        female1RadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setText("Min Value");

        jLabel10.setText("Max Value");

        jLabel5.setText("Cage");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        minField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minFieldMouseClicked(evt);
            }
        });

        maxField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maxFieldMouseClicked(evt);
            }
        });

        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("FIltered by");

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Value");

        buttonGroup1.add(increaseRadioButton);
        increaseRadioButton.setText("Increase");

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        changeButton.setText("Change");
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Pig ID");

        filterCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pig_id", "Gender", "Date_in", "Date_out", "Weigh", "Age", "Cage_id" }));
        filterCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterComboboxActionPerformed(evt);
            }
        });

        jLabel2.setText("Date Out");

        jLabel3.setText("date_in");

        buttonGroup1.add(decreaseRadioButton);
        decreaseRadioButton.setText("Decrease");

        sortButton.setText("Sort");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Sorted by");

        idField.setText("Hola");
        idField.setEnabled(false);
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });

        filterCombobox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pig_id", "Gender", "Date_in", "Date_out", "Weigh", "Age", "Cage_id" }));
        filterCombobox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterCombobox1ActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        binButton.setText("Recycle bin");
        binButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binButtonActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jLabel4.setText("Gender");

        cageField.setText("Ronaldo");
        cageField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cageFieldMouseClicked(evt);
            }
        });
        cageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cageFieldActionPerformed(evt);
            }
        });

        dateIn.setDateFormatString("yyyy-MM-dd");

        dateOut.setDateFormatString("yyyy-MM-dd");
        dateOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateOutMouseClicked(evt);
            }
        });

        jLabel11.setText("weigh");

        weighSlider.setMaximum(500);
        weighSlider.setPaintLabels(true);
        weighSlider.setPaintTicks(true);
        weighSlider.setValue(0);
        weighSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                weighSliderStateChanged(evt);
            }
        });

        ageSlider.setMaximum(500);
        ageSlider.setPaintTicks(true);
        ageSlider.setValue(0);
        ageSlider.setEnabled(false);
        ageSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ageSliderStateChanged(evt);
            }
        });

        jLabel13.setText("Age");

        minDate.setDateFormatString("yyyy-MM-dd");

        maxDate.setDateFormatString("yyyy-MM-dd");

        ageLabel.setText("Age Label");

        weighLabel.setText("weigh Label");

        buttonGroup2.add(maleRadioButton);
        maleRadioButton.setText("Male");

        buttonGroup2.add(femaleRadioButton);
        femaleRadioButton.setText("Female");

        buttonGroup3.add(male1RadioButton);
        male1RadioButton.setText("Male");

        buttonGroup3.add(female1RadioButton);
        female1RadioButton.setText("Female");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(binButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(160, 160, 160)
                                .addComponent(addButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exitButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(changeButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(66, 66, 66)
                                        .addComponent(cageField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(66, 66, 66)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(weighSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(ageSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(weighLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(dateOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(dateIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(maleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(femaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(sortButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(male1RadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(maxField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(maxDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(minField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(minDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(female1RadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(filterButton)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(filterCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(valueField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel9))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(filterCombobox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                        .addComponent(increaseRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(decreaseRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(binButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(419, 419, 419)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(male1RadioButton)
                                    .addComponent(female1RadioButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(maleRadioButton)
                                    .addComponent(femaleRadioButton))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(dateIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(dateOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(weighSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(ageSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel13)
                                                .addComponent(ageLabel))))
                                    .addComponent(weighLabel))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(cageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(changeButton)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel9)
                                                .addComponent(minField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(filterCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel6))
                                            .addComponent(minDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel7)
                                            .addComponent(valueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10)
                                            .addComponent(maxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(maxDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filterButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filterCombobox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(increaseRadioButton)
                            .addComponent(decreaseRadioButton)
                            .addComponent(jLabel8))
                        .addGap(8, 8, 8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addButton)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(removeButton)
                                .addComponent(refreshButton)))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sortButton)
                        .addGap(28, 28, 28))))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        switch (String.valueOf(filterCombobox.getSelectedItem())) {
            case "Pig_id": {
                list = list.stream().filter(o -> o.getPig_id().toLowerCase().trim().contains(valueField.getText().toLowerCase().trim())).collect(Collectors.toList());
                break;
            }
            case "Gender": {
                if (male1RadioButton.isSelected()) {
                    list = list.stream().filter(o -> o.getGender().trim().equals("Male")).collect(Collectors.toList());
                } else if (female1RadioButton.isSelected()) {
                    list = list.stream().filter(o -> o.getGender().equals("Female")).collect(Collectors.toList());
                }
                break;
            }
            case "Date_in": {
                if (minDate.getDate().after(maxDate.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, " Min Date field has to be smaller than Max Date field !!");
                    return;
                }
                list = list.stream()
                        .filter(o -> (Date.valueOf(o.getDate_in()).after(minDate.getDate()) && Date.valueOf(o.getDate_in()).before(maxDate.getDate())))
                        .collect(Collectors.toList());

                break;
            }
            case "Date_out": {
                if (minDate.getDate().after(maxDate.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, " Min Date field has to be smaller than Max Date field !!");
                    return;
                }
                list = list.stream()
                        .filter(o -> (Date.valueOf(o.getDate_out()).after(minDate.getDate()) && Date.valueOf(o.getDate_out()).before(maxDate.getDate())))
                        .collect(Collectors.toList());
                break;
            }
            case "Weigh": {
                if (minField.getText().matches("[0-9.]+") == false || maxField.getText().matches("[0-9.]+") == false) {
                    if (minField.getText().matches("[0-9.]+") == false) {
                        minField.setBackground(Color.red);
                        JOptionPane.showMessageDialog(null, "Please enter number into Min value");
                    }
                    if (maxField.getText().matches("[0-9.]+") == false) {
                        maxField.setBackground(Color.red);
                        JOptionPane.showMessageDialog(null, "Please enter number into Max value");
                    }

                } else {
                    if (Double.valueOf(minField.getText()) >= Double.valueOf(maxField.getText())) {
                        JOptionPane.showMessageDialog(null, "Min Salary field has to be smaller than Max salary field !!");
                        return;
                    }
                    minField.setBackground(Color.white);
                    maxField.setBackground(Color.white);
                    list = list.stream().filter(o -> o.getWeigh() >= Integer.parseInt(minField.getText()) && o.getWeigh() <= Integer.parseInt(maxField.getText())).collect(Collectors.toList());
                }
                break;
            }
            case "Age": {
                if (minField.getText().matches("[0-9.]+") == false || maxField.getText().matches("[0-9.]+") == false) {
                    if (minField.getText().matches("[0-9.]+") == false) {
                        minField.setBackground(Color.red);
                        JOptionPane.showMessageDialog(null, "Please enter number into Min value");
                    }
                    if (maxField.getText().matches("[0-9.]+") == false) {
                        if (Double.valueOf(minField.getText()) >= Double.valueOf(maxField.getText())) {
                            JOptionPane.showMessageDialog(null, "Min Salary field has to be smaller than Max salary field !!");
                            return;
                        }
                        maxField.setBackground(Color.red);
                        JOptionPane.showMessageDialog(null, "Please enter number into Max value");
                    }

                } else {
                    minField.setBackground(Color.white);
                    maxField.setBackground(Color.white);
                    list = list.stream().filter(o -> o.getAge() >= Integer.parseInt(minField.getText()) && o.getAge() <= Integer.parseInt(maxField.getText())).collect(Collectors.toList());
                }
                break;
            }
            case "Cage_id": {
                list = list.stream().filter(o -> o.getCage().toLowerCase().trim().contains(valueField.getText().toLowerCase().trim())).collect(Collectors.toList());
                break;
            }
        }
        model.setRowCount(0);
        for (Pig u : list) {
            model.addRow(new Object[]{u.getPig_id(), u.getGender(), u.getDate_in(), u.getDate_out(), u.getWeigh(), u.getAge(), u.getCage()});
        }
    }//GEN-LAST:event_filterButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        row = Table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(PigGUI.this, "Please choose Pig", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(PigGUI.this, "Are you sure ??");
            if (confirm == JOptionPane.YES_OPTION) {
                pig = list.get(Table.getSelectedRow());
                pigd.hidePig(pig);

                try {
                    pigd.getConnection().close();
                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(PigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }

                model.setRowCount(0);
                for (Pig u : list) {
                    model.addRow(new Object[]{u.getPig_id(), u.getGender(), u.getDate_in(), u.getDate_out(), u.getWeigh(), u.getAge(), u.getCage()});
                }
                model.setRowCount(0);

                for (Pig u : list) {
                    model.addRow(new Object[]{u.getPig_id(), u.getGender(), u.getDate_in(), u.getDate_out(), u.getWeigh(), u.getAge(), u.getCage()});
                }
            }
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        new AccountGUI().setVisible(true);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        // TODO add your handling code here:
        row = Table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(PigGUI.this, "Please choose Pig", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(PigGUI.this, "Are you sure ??");
            if (confirm == JOptionPane.YES_OPTION) {
                if (cageField.getText().equals("")) {
                    cageField.setBackground(Color.red);
                    JOptionPane.showMessageDialog(PigGUI.this, "There is no blank field allowed", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                pig = list.get(Table.getSelectedRow());
                pig.setPig_id(idField.getText().trim());
                if (maleRadioButton.isSelected()) {
                    pig.setGender("Male");
                } else if (femaleRadioButton.isSelected()) {
                    pig.setGender("Female");
                }
                pig.setDate_in(dateIn.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
                pig.setDate_out(dateOut.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
                pig.setWeigh(weighSlider.getValue());
                pig.setAge(ageSlider.getValue());
                pig.setCage(cageField.getText());
                if (dateIn.getDate().after(dateOut.getDate())) {
                    JOptionPane.showMessageDialog(rootPane, "Date Out has to be smaller than Date In");
                    return;
                }
                if (!dateOut.getDate().equals(Date.valueOf(LocalDate.of(9999, 01, 01)))) {
                    int confirm1 = JOptionPane.showConfirmDialog(rootPane, "If you change Date Out, this PIG is going to be removed");
                    if (confirm1 == JOptionPane.YES_OPTION) {
                        pigd.removePig();
                        try {
                            pigd.getConnection().close();
                        } catch (SQLException ex) {
                            java.util.logging.Logger.getLogger(AddPigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                        }
                    }
                }
                pigd.updatePig(pig);
                JOptionPane.showMessageDialog(rootPane, "Change Success !!");
                try {
                    pigd.getConnection().close();
                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(PigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }

            }
        }
        refreshButtonActionPerformed(evt);
    }//GEN-LAST:event_changeButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        list = pigd.getPigs();
        try {
            pigd.getConnection().close();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AddPigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        model.setRowCount(0);
        pigd.removePig();
        try {
            pigd.getConnection().close();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AddPigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        for (Pig u : list) {
            model.addRow(new Object[]{u.getPig_id(), u.getGender(), u.getDate_in(), u.getDate_out(), u.getWeigh(), u.getAge(), u.getCage()});
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void filterComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterComboboxActionPerformed

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        // TODO add your handling code here:
        switch (String.valueOf(filterCombobox.getSelectedItem())) {
            case "Pig_id": {
                if (increaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o1.getPig_id().compareTo(o2.getPig_id());
                    }
                    ).collect(Collectors.toList());
                }
                if (decreaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o2.getPig_id().compareTo(o1.getPig_id());
                    }
                    ).collect(Collectors.toList());
                }
                break;
            }
            case "Gender": {
                if (increaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o1.getGender().compareTo(o2.getGender());
                    }
                    ).collect(Collectors.toList());
                }
                if (decreaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o2.getGender().compareTo(o1.getGender());
                    }
                    ).collect(Collectors.toList());
                }
                break;
            }
            case "Cage_id": {
                if (increaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o1.getCage().compareTo(o2.getCage());
                    }
                    ).collect(Collectors.toList());
                }
                if (decreaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o2.getCage().compareTo(o1.getCage());
                    }
                    ).collect(Collectors.toList());
                }
                break;
            }
            case "Date_in": {
                if (increaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o1.getDate_in().compareTo(o2.getDate_in());
                    }
                    ).collect(Collectors.toList());
                }
                if (decreaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o2.getDate_in().compareTo(o1.getDate_in());
                    }
                    ).collect(Collectors.toList());
                }
                break;
            }
            case "Date_out": {
                if (increaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o1.getDate_out().compareTo(o2.getDate_out());
                    }
                    ).collect(Collectors.toList());
                }
                if (decreaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return o2.getDate_out().compareTo(o1.getDate_out());
                    }
                    ).collect(Collectors.toList());
                }
                break;
            }
            case "Weigh": {
                if (increaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return Double.compare(o1.getWeigh(), o2.getWeigh());
                    }
                    ).collect(Collectors.toList());
                }
                if (decreaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return Double.compare(o2.getWeigh(), o1.getWeigh());
                    }
                    ).collect(Collectors.toList());
                }
                break;
            }
            case "Age": {
                if (increaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return Double.compare(o1.getAge(), o2.getAge());
                    }
                    ).collect(Collectors.toList());
                }
                if (decreaseRadioButton.isSelected()) {
                    list = list.stream().sorted((o1, o2)
                            -> {
                        return Double.compare(o2.getAge(), o1.getAge());
                    }
                    ).collect(Collectors.toList());
                }
                break;
            }
        }
        model.setRowCount(0);
        for (Pig u : list) {
            model.addRow(new Object[]{u.getPig_id(), u.getGender(), u.getDate_in(), u.getDate_out(), u.getWeigh(), u.getAge(), u.getCage()});
        }
    }//GEN-LAST:event_sortButtonActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldActionPerformed

    private void filterCombobox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterCombobox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterCombobox1ActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        new AddPigGUI().setVisible(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void binButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        new PigBinGUI().setVisible(true);
    }//GEN-LAST:event_binButtonActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        if (Table.getSelectedRow() == -1) {
            return;
        }
        pig = list.get(Table.getSelectedRow());
        idField.setText(pig.getPig_id());
        if (pig.getGender().trim().equals("Male")) {
            maleRadioButton.setSelected(true);
        }
        if (pig.getGender().trim().equals("Female")) {
            femaleRadioButton.setSelected(true);
        }
        dateIn.setDate(Date.from(pig.getDate_in().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        dateOut.setDate(Date.from(pig.getDate_out().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        ageSlider.setValue(pig.getAge());
        weighSlider.setValue(pig.getWeigh());
        cageField.setText(pig.getCage().trim());
    }//GEN-LAST:event_TableMouseClicked

    private void cageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cageFieldActionPerformed

    private void weighSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_weighSliderStateChanged
        // TODO add your handling code here:
        weighLabel.setText("" + weighSlider.getValue());
    }//GEN-LAST:event_weighSliderStateChanged

    private void ageSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ageSliderStateChanged
        // TODO add your handling code here:
        ageLabel.setText("" + ageSlider.getValue());
    }//GEN-LAST:event_ageSliderStateChanged

    private void dateOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateOutMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dateOutMouseClicked

    private void minFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minFieldMouseClicked
        // TODO add your handling code here:
        minField.setBackground(Color.white);
    }//GEN-LAST:event_minFieldMouseClicked

    private void maxFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxFieldMouseClicked
        // TODO add your handling code here:
        maxField.setBackground(Color.white);
    }//GEN-LAST:event_maxFieldMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void cageFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cageFieldMouseClicked
        // TODO add your handling code here:
        cageField.setBackground(Color.WHITE);
    }//GEN-LAST:event_cageFieldMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PigGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JSlider ageSlider;
    private javax.swing.JButton binButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField cageField;
    private javax.swing.JButton changeButton;
    private com.toedter.calendar.JDateChooser dateIn;
    private com.toedter.calendar.JDateChooser dateOut;
    private javax.swing.JRadioButton decreaseRadioButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JRadioButton female1RadioButton;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JButton filterButton;
    private javax.swing.JComboBox<String> filterCombobox;
    private javax.swing.JComboBox<String> filterCombobox1;
    private javax.swing.JTextField idField;
    private javax.swing.JRadioButton increaseRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton male1RadioButton;
    private javax.swing.JRadioButton maleRadioButton;
    private com.toedter.calendar.JDateChooser maxDate;
    private javax.swing.JTextField maxField;
    private com.toedter.calendar.JDateChooser minDate;
    private javax.swing.JTextField minField;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton sortButton;
    private javax.swing.JTextField valueField;
    private javax.swing.JLabel weighLabel;
    private javax.swing.JSlider weighSlider;
    // End of variables declaration//GEN-END:variables
}
